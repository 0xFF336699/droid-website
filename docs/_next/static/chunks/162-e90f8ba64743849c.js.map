{"version":3,"file":"static/chunks/162-e90f8ba64743849c.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/.pnpm/@mui+material-nextjs@6.2.0_@emotion+cache@11.14.0_@emotion+react@11.14.0_@types+react@19.0.1__uf7yzbeqc7jvmpbb4tpp5arl3e/node_modules/@mui/material-nextjs/v13-appRouter/appRouterV13.js","webpack://_N_E/../../node_modules/.pnpm/@mui+material@6.2.0_@emotion+react@11.14.0_@types+react@19.0.1_react@19.0.0__@emotion+styled@_kpkjigxuopup3qauiigb2zavni/node_modules/@mui/material/CircularProgress/circularProgressClasses.js","webpack://_N_E/../../node_modules/.pnpm/@mui+material@6.2.0_@emotion+react@11.14.0_@types+react@19.0.1_react@19.0.0__@emotion+styled@_kpkjigxuopup3qauiigb2zavni/node_modules/@mui/material/CircularProgress/CircularProgress.js","webpack://_N_E/../../../src/client/components/forbidden.ts","webpack://_N_E/../../../src/client/components/hooks-server-context.ts","webpack://_N_E/../../../src/client/components/navigation.ts","webpack://_N_E/../../../src/client/components/navigation.react-server.ts","webpack://_N_E/../../../src/client/components/not-found.ts","webpack://_N_E/../../../src/client/components/redirect.ts","webpack://_N_E/../../../../../src/client/components/router-reducer/reducers/get-segment-value.ts","webpack://_N_E/../../../src/client/components/static-generation-bailout.ts","webpack://_N_E/../../../src/client/components/unauthorized.ts","webpack://_N_E/../../../src/client/components/unstable-rethrow.ts","webpack://_N_E/../../../src/export/helpers/is-dynamic-usage-error.ts","webpack://_N_E/../../../src/lib/metadata/metadata-constants.tsx","webpack://_N_E/../../../src/server/app-render/action-async-storage-instance.ts","webpack://_N_E/../../../src/server/app-render/action-async-storage.external.ts","webpack://_N_E/../../../src/server/app-render/async-local-storage.ts","webpack://_N_E/../../../src/server/app-render/dynamic-rendering.ts","webpack://_N_E/../../../src/server/app-render/work-async-storage-instance.ts","webpack://_N_E/../../../src/server/app-render/work-async-storage.external.ts","webpack://_N_E/../../../src/server/app-render/work-unit-async-storage-instance.ts","webpack://_N_E/../../../src/server/app-render/work-unit-async-storage.external.ts","webpack://_N_E/../../src/server/dynamic-rendering-utils.ts","webpack://_N_E/../../../../src/server/lib/router-utils/is-postpone.ts","webpack://_N_E/../../../src/shared/lib/server-inserted-html.shared-runtime.tsx","webpack://_N_E/../../node_modules/.pnpm/next@15.1.7_@babel+core@7.26.0_babel-plugin-macros@3.1.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.82.0/node_modules/next/navigation.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createCache from '@emotion/cache';\nimport { CacheProvider as DefaultCacheProvider } from '@emotion/react';\nimport { useServerInsertedHTML } from 'next/navigation';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * Emotion works OK without this provider but it's recommended to use this provider to improve performance.\n * Without it, Emotion will generate a new <style> tag during SSR for every component.\n * See https://github.com/mui/material-ui/issues/26561#issuecomment-855286153 for why it's a problem.\n */\nexport default function AppRouterCacheProvider(props) {\n  const {\n    options,\n    CacheProvider = DefaultCacheProvider,\n    children\n  } = props;\n  const [registry] = React.useState(() => {\n    const cache = createCache({\n      ...options,\n      key: options?.key ?? 'mui'\n    });\n    cache.compat = true;\n    const prevInsert = cache.insert;\n    let inserted = [];\n    // Override the insert method to support streaming SSR with flush().\n    cache.insert = (...args) => {\n      if (options?.enableCssLayer) {\n        args[1].styles = `@layer mui {${args[1].styles}}`;\n      }\n      const [selector, serialized] = args;\n      if (cache.inserted[serialized.name] === undefined) {\n        inserted.push({\n          name: serialized.name,\n          isGlobal: !selector\n        });\n      }\n      return prevInsert(...args);\n    };\n    const flush = () => {\n      const prevInserted = inserted;\n      inserted = [];\n      return prevInserted;\n    };\n    return {\n      cache,\n      flush\n    };\n  });\n  useServerInsertedHTML(() => {\n    const inserted = registry.flush();\n    if (inserted.length === 0) {\n      return null;\n    }\n    let styles = '';\n    let dataEmotionAttribute = registry.cache.key;\n    const globals = [];\n    inserted.forEach(({\n      name,\n      isGlobal\n    }) => {\n      const style = registry.cache.inserted[name];\n      if (typeof style === 'string') {\n        if (isGlobal) {\n          globals.push({\n            name,\n            style\n          });\n        } else {\n          styles += style;\n          dataEmotionAttribute += ` ${name}`;\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [globals.map(({\n        name,\n        style\n      }) => /*#__PURE__*/_jsx(\"style\", {\n        nonce: options?.nonce,\n        \"data-emotion\": `${registry.cache.key}-global ${name}`\n        // eslint-disable-next-line react/no-danger\n        ,\n        dangerouslySetInnerHTML: {\n          __html: style\n        }\n      }, name)), styles && /*#__PURE__*/_jsx(\"style\", {\n        nonce: options?.nonce,\n        \"data-emotion\": dataEmotionAttribute\n        // eslint-disable-next-line react/no-danger\n        ,\n        dangerouslySetInnerHTML: {\n          __html: styles\n        }\n      })]\n    });\n  });\n  return /*#__PURE__*/_jsx(CacheProvider, {\n    value: registry.cache,\n    children: children\n  });\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getCircularProgressUtilityClass } from \"./circularProgressClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`;\nconst circularDashKeyframe = keyframes`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst rotateAnimation = typeof circularRotateKeyframe !== 'string' ? css`\n        animation: ${circularRotateKeyframe} 1.4s linear infinite;\n      ` : null;\nconst dashAnimation = typeof circularDashKeyframe !== 'string' ? css`\n        animation: ${circularDashKeyframe} 1.4s ease-in-out infinite;\n      ` : null;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-block',\n  variants: [{\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: theme.transitions.create('transform')\n    }\n  }, {\n    props: {\n      variant: 'indeterminate'\n    },\n    style: rotateAnimation || {\n      animation: `${circularRotateKeyframe} 1.4s linear infinite`\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  }))]\n})));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  stroke: 'currentColor',\n  variants: [{\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    }\n  }, {\n    props: {\n      variant: 'indeterminate'\n    },\n    style: {\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink,\n    style: dashAnimation || {\n      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.\n      animation: `${circularDashKeyframe} 1.4s ease-in-out infinite`\n    }\n  }]\n})));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, {\n    className: clsx(classes.root, className),\n    style: {\n      width: size,\n      height: size,\n      ...rootStyle,\n      ...style\n    },\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\",\n    ...rootProps,\n    ...other,\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `forbidden` docs\n/**\n * @experimental\n * This function allows you to render the [forbidden.js file](https://nextjs.org/docs/app/api-reference/file-conventions/forbidden)\n * within a route segment as well as inject a tag.\n *\n * `forbidden()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * Read more: [Next.js Docs: `forbidden`](https://nextjs.org/docs/app/api-reference/functions/forbidden)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};403`\n\nexport function forbidden(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`forbidden()\\` is experimental and only allowed to be enabled when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n","import type { FlightRouterState } from '../../server/app-render/types'\nimport type { Params } from '../../server/request/params'\n\nimport { useContext, useMemo } from 'react'\nimport {\n  AppRouterContext,\n  LayoutRouterContext,\n  type AppRouterInstance,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport {\n  SearchParamsContext,\n  PathnameContext,\n  PathParamsContext,\n} from '../../shared/lib/hooks-client-context.shared-runtime'\nimport { getSegmentValue } from './router-reducer/reducers/get-segment-value'\nimport { PAGE_SEGMENT_KEY, DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment'\nimport { ReadonlyURLSearchParams } from './navigation.react-server'\nimport { useDynamicRouteParams } from '../../server/app-render/dynamic-rendering'\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you *read* the current URL's search parameters.\n *\n * Learn more about [`URLSearchParams` on MDN](https://developer.mozilla.org/docs/Web/API/URLSearchParams)\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useSearchParams } from 'next/navigation'\n *\n * export default function Page() {\n *   const searchParams = useSearchParams()\n *   searchParams.get('foo') // returns 'bar' when ?foo=bar\n *   // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSearchParams`](https://nextjs.org/docs/app/api-reference/functions/use-search-params)\n */\n// Client components API\nexport function useSearchParams(): ReadonlyURLSearchParams {\n  const searchParams = useContext(SearchParamsContext)\n\n  // In the case where this is `null`, the compat types added in\n  // `next-env.d.ts` will add a new overload that changes the return type to\n  // include `null`.\n  const readonlySearchParams = useMemo(() => {\n    if (!searchParams) {\n      // When the router is not ready in pages, we won't have the search params\n      // available.\n      return null\n    }\n\n    return new ReadonlyURLSearchParams(searchParams)\n  }, [searchParams]) as ReadonlyURLSearchParams\n\n  if (typeof window === 'undefined') {\n    // AsyncLocalStorage should not be included in the client bundle.\n    const { bailoutToClientRendering } =\n      require('./bailout-to-client-rendering') as typeof import('./bailout-to-client-rendering')\n    // TODO-APP: handle dynamic = 'force-static' here and on the client\n    bailoutToClientRendering('useSearchParams()')\n  }\n\n  return readonlySearchParams\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the current URL's pathname.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { usePathname } from 'next/navigation'\n *\n * export default function Page() {\n *  const pathname = usePathname() // returns \"/dashboard\" on /dashboard?foo=bar\n *  // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `usePathname`](https://nextjs.org/docs/app/api-reference/functions/use-pathname)\n */\n// Client components API\nexport function usePathname(): string {\n  useDynamicRouteParams('usePathname()')\n\n  // In the case where this is `null`, the compat types added in `next-env.d.ts`\n  // will add a new overload that changes the return type to include `null`.\n  return useContext(PathnameContext) as string\n}\n\n// Client components API\nexport {\n  ServerInsertedHTMLContext,\n  useServerInsertedHTML,\n} from '../../shared/lib/server-inserted-html.shared-runtime'\n\n/**\n *\n * This hook allows you to programmatically change routes inside [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components).\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useRouter } from 'next/navigation'\n *\n * export default function Page() {\n *  const router = useRouter()\n *  // ...\n *  router.push('/dashboard') // Navigate to /dashboard\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useRouter`](https://nextjs.org/docs/app/api-reference/functions/use-router)\n */\n// Client components API\nexport function useRouter(): AppRouterInstance {\n  const router = useContext(AppRouterContext)\n  if (router === null) {\n    throw new Error('invariant expected app router to be mounted')\n  }\n\n  return router\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read a route's dynamic params filled in by the current URL.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useParams } from 'next/navigation'\n *\n * export default function Page() {\n *   // on /dashboard/[team] where pathname is /dashboard/nextjs\n *   const { team } = useParams() // team === \"nextjs\"\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useParams`](https://nextjs.org/docs/app/api-reference/functions/use-params)\n */\n// Client components API\nexport function useParams<T extends Params = Params>(): T {\n  useDynamicRouteParams('useParams()')\n\n  return useContext(PathParamsContext) as T\n}\n\n/** Get the canonical parameters from the current level to the leaf node. */\n// Client components API\nfunction getSelectedLayoutSegmentPath(\n  tree: FlightRouterState,\n  parallelRouteKey: string,\n  first = true,\n  segmentPath: string[] = []\n): string[] {\n  let node: FlightRouterState\n  if (first) {\n    // Use the provided parallel route key on the first parallel route\n    node = tree[1][parallelRouteKey]\n  } else {\n    // After first parallel route prefer children, if there's no children pick the first parallel route.\n    const parallelRoutes = tree[1]\n    node = parallelRoutes.children ?? Object.values(parallelRoutes)[0]\n  }\n\n  if (!node) return segmentPath\n  const segment = node[0]\n\n  let segmentValue = getSegmentValue(segment)\n\n  if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) {\n    return segmentPath\n  }\n\n  segmentPath.push(segmentValue)\n\n  return getSelectedLayoutSegmentPath(\n    node,\n    parallelRouteKey,\n    false,\n    segmentPath\n  )\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segments **below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n *\n * import { useSelectedLayoutSegments } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segments = useSelectedLayoutSegments()\n *\n *   return (\n *     <ul>\n *       {segments.map((segment, index) => (\n *         <li key={index}>{segment}</li>\n *       ))}\n *     </ul>\n *   )\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegments`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segments)\n */\n// Client components API\nexport function useSelectedLayoutSegments(\n  parallelRouteKey: string = 'children'\n): string[] {\n  useDynamicRouteParams('useSelectedLayoutSegments()')\n\n  const context = useContext(LayoutRouterContext)\n  // @ts-expect-error This only happens in `pages`. Type is overwritten in navigation.d.ts\n  if (!context) return null\n\n  return getSelectedLayoutSegmentPath(context.tree, parallelRouteKey)\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segment **one level below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n * import { useSelectedLayoutSegment } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segment = useSelectedLayoutSegment()\n *\n *   return <p>Active segment: {segment}</p>\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegment`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segment)\n */\n// Client components API\nexport function useSelectedLayoutSegment(\n  parallelRouteKey: string = 'children'\n): string | null {\n  useDynamicRouteParams('useSelectedLayoutSegment()')\n\n  const selectedLayoutSegments = useSelectedLayoutSegments(parallelRouteKey)\n\n  if (!selectedLayoutSegments || selectedLayoutSegments.length === 0) {\n    return null\n  }\n\n  const selectedLayoutSegment =\n    parallelRouteKey === 'children'\n      ? selectedLayoutSegments[0]\n      : selectedLayoutSegments[selectedLayoutSegments.length - 1]\n\n  // if the default slot is showing, we return null since it's not technically \"selected\" (it's a fallback)\n  // and returning an internal value like `__DEFAULT__` would be confusing.\n  return selectedLayoutSegment === DEFAULT_SEGMENT_KEY\n    ? null\n    : selectedLayoutSegment\n}\n\n// Shared components APIs\nexport {\n  notFound,\n  forbidden,\n  unauthorized,\n  redirect,\n  permanentRedirect,\n  RedirectType,\n  ReadonlyURLSearchParams,\n  unstable_rethrow,\n} from './navigation.react-server'\n","/** @internal */\nclass ReadonlyURLSearchParamsError extends Error {\n  constructor() {\n    super(\n      'Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams'\n    )\n  }\n}\n\nclass ReadonlyURLSearchParams extends URLSearchParams {\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  append() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  delete() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  set() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  sort() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n}\n\nexport { redirect, permanentRedirect } from './redirect'\nexport { RedirectType } from './redirect-error'\nexport { notFound } from './not-found'\nexport { forbidden } from './forbidden'\nexport { unauthorized } from './unauthorized'\nexport { unstable_rethrow } from './unstable-rethrow'\nexport { ReadonlyURLSearchParams }\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};404`\n\nexport function notFound(): never {\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n\n  throw error\n}\n","import { actionAsyncStorage } from '../../server/app-render/action-async-storage.external'\nimport { RedirectStatusCode } from './redirect-status-code'\nimport {\n  RedirectType,\n  type RedirectError,\n  isRedirectError,\n  REDIRECT_ERROR_CODE,\n} from './redirect-error'\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  const actionStore = actionAsyncStorage.getStore()\n  const redirectType =\n    type || (actionStore?.isAction ? RedirectType.push : RedirectType.replace)\n  throw getRedirectError(\n    url,\n    redirectType,\n    RedirectStatusCode.TemporaryRedirect\n  )\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n","import type { Segment } from '../../../../server/app-render/types'\n\nexport function getSegmentValue(segment: Segment) {\n  return Array.isArray(segment) ? segment[1] : segment\n}\n","const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `unauthorized` docs\n/**\n * @experimental\n * This function allows you to render the [unauthorized.js file](https://nextjs.org/docs/app/api-reference/file-conventions/unauthorized)\n * within a route segment as well as inject a tag.\n *\n * `unauthorized()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n *\n * Read more: [Next.js Docs: `unauthorized`](https://nextjs.org/docs/app/api-reference/functions/unauthorized)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};401`\n\nexport function unauthorized(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`unauthorized()\\` is experimental and only allowed to be used when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","import { isDynamicUsageError } from '../../export/helpers/is-dynamic-usage-error'\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isNextRouterError } from './is-next-router-error'\n\n/**\n * This function should be used to rethrow internal Next.js errors so that they can be handled by the framework.\n * When wrapping an API that uses errors to interrupt control flow, you should use this function before you do any error handling.\n * This function will rethrow the error if it is a Next.js error so it can be handled, otherwise it will do nothing.\n *\n * Read more: [Next.js Docs: `unstable_rethrow`](https://nextjs.org/docs/app/api-reference/functions/unstable_rethrow)\n */\nexport function unstable_rethrow(error: unknown): void {\n  if (\n    isNextRouterError(error) ||\n    isBailoutToCSRError(error) ||\n    isDynamicUsageError(error) ||\n    isPostpone(error)\n  ) {\n    throw error\n  }\n\n  if (error instanceof Error && 'cause' in error) {\n    unstable_rethrow(error.cause)\n  }\n}\n","import { isDynamicServerError } from '../../client/components/hooks-server-context'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isNextRouterError } from '../../client/components/is-next-router-error'\nimport { isDynamicPostpone } from '../../server/app-render/dynamic-rendering'\n\nexport const isDynamicUsageError = (err: unknown) =>\n  isDynamicServerError(err) ||\n  isBailoutToCSRError(err) ||\n  isNextRouterError(err) ||\n  isDynamicPostpone(err)\n","export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__'\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__'\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__'\n","import type { ActionAsyncStorage } from './action-async-storage.external'\nimport { createAsyncLocalStorage } from './async-local-storage'\n\nexport const actionAsyncStorageInstance: ActionAsyncStorage =\n  createAsyncLocalStorage()\n","import type { AsyncLocalStorage } from 'async_hooks'\n\n// Share the instance module in the next-shared layer\nimport { actionAsyncStorageInstance } from './action-async-storage-instance' with { 'turbopack-transition': 'next-shared' }\nexport interface ActionStore {\n  readonly isAction?: boolean\n  readonly isAppRoute?: boolean\n}\n\nexport type ActionAsyncStorage = AsyncLocalStorage<ActionStore>\n\nexport { actionAsyncStorageInstance as actionAsyncStorage }\n","import type { AsyncLocalStorage } from 'async_hooks'\n\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\n  'Invariant: AsyncLocalStorage accessed in runtime where it is not available'\n)\n\nclass FakeAsyncLocalStorage<Store extends {}>\n  implements AsyncLocalStorage<Store>\n{\n  disable(): void {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  getStore(): Store | undefined {\n    // This fake implementation of AsyncLocalStorage always returns `undefined`.\n    return undefined\n  }\n\n  run<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  exit<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  enterWith(): void {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  static bind<T>(fn: T): T {\n    return fn\n  }\n}\n\nconst maybeGlobalAsyncLocalStorage =\n  typeof globalThis !== 'undefined' && (globalThis as any).AsyncLocalStorage\n\nexport function createAsyncLocalStorage<\n  Store extends {},\n>(): AsyncLocalStorage<Store> {\n  if (maybeGlobalAsyncLocalStorage) {\n    return new maybeGlobalAsyncLocalStorage()\n  }\n  return new FakeAsyncLocalStorage()\n}\n\nexport function bindSnapshot<T>(fn: T): T {\n  if (maybeGlobalAsyncLocalStorage) {\n    return maybeGlobalAsyncLocalStorage.bind(fn)\n  }\n  return FakeAsyncLocalStorage.bind(fn)\n}\n\nexport function createSnapshot(): <R, TArgs extends any[]>(\n  fn: (...args: TArgs) => R,\n  ...args: TArgs\n) => R {\n  if (maybeGlobalAsyncLocalStorage) {\n    return maybeGlobalAsyncLocalStorage.snapshot()\n  }\n  return function (fn: any, ...args: any[]) {\n    return fn(...args)\n  }\n}\n","/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n} from '../../lib/metadata/metadata-constants'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicExpression: undefined | string\n  syncDynamicErrorWithStack: null | Error\n  // Dev only\n  syncDynamicLogged?: boolean\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspendedDynamic: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasSyncDynamicErrors: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicExpression: undefined,\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspendedDynamic: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasSyncDynamicErrors: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    if (\n      workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache'\n    ) {\n      // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n      // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n      // forbidden inside a cache scope.\n      return\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    if (workUnitStore.type === 'prerender-ppr') {\n      postponeWithTracking(\n        store.route,\n        expression,\n        workUnitStore.dynamicTracking\n      )\n    } else if (workUnitStore.type === 'prerender-legacy') {\n      workUnitStore.revalidate = 0\n\n      // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n      const err = new DynamicServerError(\n        `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n      )\n      store.dynamicUsageDescription = expression\n      store.dynamicUsageStack = err.stack\n\n      throw err\n    } else if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n}\n\n/**\n * This function communicates that some dynamic path parameter was read. This\n * differs from the more general `trackDynamicDataAccessed` in that it is will\n * not error when `dynamic = \"error\"` is set.\n *\n * @param store The static generation store\n * @param expression The expression that was accessed dynamically\n */\nexport function trackFallbackParamAccessed(\n  store: WorkStore,\n  expression: string\n): void {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return\n\n  postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking)\n}\n\n/**\n * This function is meant to be used when prerendering without dynamicIO or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(\n  _store: WorkStore,\n  workUnitStore: void | WorkUnitStore\n) {\n  if (workUnitStore) {\n    if (\n      workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache'\n    ) {\n      // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n      // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n      // forbidden inside a cache scope.\n      return\n    }\n    if (\n      workUnitStore.type === 'prerender' ||\n      workUnitStore.type === 'prerender-legacy'\n    ) {\n      workUnitStore.revalidate = 0\n    }\n    if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n}\n\n// Despite it's name we don't actually abort unless we have a controller to call abort on\n// There are times when we let a prerender run long to discover caches where we want the semantics\n// of tracking dynamic access without terminating the prerender early\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicExpression = expression\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n  return abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of prerender mode\n  requestStore.prerenderPhase = false\n}\n\n/**\n * use this function when prerendering with dynamicIO. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in dynamicIO mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicExpression = expression\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n      if (prerenderStore.validating === true) {\n        // We always log Request Access in dev at the point of calling the function\n        // So we mark the dynamic validation as not requiring it to be printed\n        dynamicTracking.syncDynamicLogged = true\n      }\n    }\n  }\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev =\n  trackSynchronousPlatformIOAccessInDev\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createPostponedAbortSignal(reason: string): AbortSignal {\n  assertPostpone()\n  const controller = new AbortController()\n  // We get our hands on a postpone instance by calling postpone and catching the throw\n  try {\n    React.unstable_postpone(reason)\n  } catch (x: unknown) {\n    controller.abort(x)\n  }\n  return controller.signal\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  if (typeof window === 'undefined') {\n    const workStore = workAsyncStorage.getStore()\n\n    if (\n      workStore &&\n      workStore.isStaticGeneration &&\n      workStore.fallbackRouteParams &&\n      workStore.fallbackRouteParams.size > 0\n    ) {\n      // There are fallback route params, we should track these as dynamic\n      // accesses.\n      const workUnitStore = workUnitAsyncStorage.getStore()\n      if (workUnitStore) {\n        // We're prerendering with dynamicIO or PPR or both\n        if (workUnitStore.type === 'prerender') {\n          // We are in a prerender with dynamicIO semantics\n          // We are going to hang here and never resolve. This will cause the currently\n          // rendering component to effectively be a dynamic hole\n          React.use(makeHangingPromise(workUnitStore.renderSignal, expression))\n        } else if (workUnitStore.type === 'prerender-ppr') {\n          // We're prerendering with PPR\n          postponeWithTracking(\n            workStore.route,\n            expression,\n            workUnitStore.dynamicTracking\n          )\n        } else if (workUnitStore.type === 'prerender-legacy') {\n          throwToInterruptStaticGeneration(expression, workStore, workUnitStore)\n        }\n      }\n    }\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  route: string,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    dynamicValidation.hasSuspendedDynamic = true\n    return\n  } else if (\n    serverDynamic.syncDynamicErrorWithStack ||\n    clientDynamic.syncDynamicErrorWithStack\n  ) {\n    dynamicValidation.hasSyncDynamicErrors = true\n    return\n  } else {\n    const message = `Route \"${route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. We don't have the exact line number added to error messages yet but you can see which component in the stack below. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`\n    const error = createErrorWithComponentStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\nfunction createErrorWithComponentStack(\n  message: string,\n  componentStack: string\n) {\n  const error = new Error(message)\n  error.stack = 'Error: ' + message + componentStack\n  return error\n}\n\nexport function throwIfDisallowedDynamic(\n  route: string,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): void {\n  let syncError: null | Error\n  let syncExpression: undefined | string\n  let syncLogged: boolean\n  if (serverDynamic.syncDynamicErrorWithStack) {\n    syncError = serverDynamic.syncDynamicErrorWithStack\n    syncExpression = serverDynamic.syncDynamicExpression!\n    syncLogged = serverDynamic.syncDynamicLogged === true\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    syncError = clientDynamic.syncDynamicErrorWithStack\n    syncExpression = clientDynamic.syncDynamicExpression!\n    syncLogged = clientDynamic.syncDynamicLogged === true\n  } else {\n    syncError = null\n    syncExpression = undefined\n    syncLogged = false\n  }\n\n  if (dynamicValidation.hasSyncDynamicErrors && syncError) {\n    if (!syncLogged) {\n      // In dev we already log errors about sync dynamic access. But during builds we need to ensure\n      // the offending sync error is logged before we exit the build\n      console.error(syncError)\n    }\n    // The actual error should have been logged when the sync access ocurred\n    throw new StaticGenBailoutError()\n  }\n\n  const dynamicErrors = dynamicValidation.dynamicErrors\n  if (dynamicErrors.length) {\n    for (let i = 0; i < dynamicErrors.length; i++) {\n      console.error(dynamicErrors[i])\n    }\n\n    throw new StaticGenBailoutError()\n  }\n\n  if (!dynamicValidation.hasSuspendedDynamic) {\n    if (dynamicValidation.hasDynamicMetadata) {\n      if (syncError) {\n        console.error(syncError)\n        throw new StaticGenBailoutError(\n          `Route \"${route}\" has a \\`generateMetadata\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`\n        )\n      }\n      throw new StaticGenBailoutError(\n        `Route \"${route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateMetadata\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`\n      )\n    } else if (dynamicValidation.hasDynamicViewport) {\n      if (syncError) {\n        console.error(syncError)\n        throw new StaticGenBailoutError(\n          `Route \"${route}\" has a \\`generateViewport\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`\n        )\n      }\n      throw new StaticGenBailoutError(\n        `Route \"${route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateViewport\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`\n      )\n    }\n  }\n}\n","import type { WorkAsyncStorage } from './work-async-storage.external'\nimport { createAsyncLocalStorage } from './async-local-storage'\n\nexport const workAsyncStorageInstance: WorkAsyncStorage =\n  createAsyncLocalStorage()\n","import type { AsyncLocalStorage } from 'async_hooks'\nimport type { IncrementalCache } from '../lib/incremental-cache'\nimport type { DynamicServerError } from '../../client/components/hooks-server-context'\nimport type { FetchMetrics } from '../base-http'\nimport type { FallbackRouteParams } from '../request/fallback-params'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport type { AppSegmentConfig } from '../../build/segment-config/app/app-segment-config'\nimport type { AfterContext } from '../after/after-context'\nimport type { CacheLife } from '../use-cache/cache-life'\n\n// Share the instance module in the next-shared layer\nimport { workAsyncStorageInstance } from './work-async-storage-instance' with { 'turbopack-transition': 'next-shared' }\n\nexport interface WorkStore {\n  readonly isStaticGeneration: boolean\n\n  /**\n   * The page that is being rendered. This relates to the path to the page file.\n   */\n  readonly page: string\n\n  /**\n   * The route that is being rendered. This is the page property without the\n   * trailing `/page` or `/route` suffix.\n   */\n  readonly route: string\n\n  /**\n   * The set of unknown route parameters. Accessing these will be tracked as\n   * a dynamic access.\n   */\n  readonly fallbackRouteParams: FallbackRouteParams | null\n\n  readonly incrementalCache?: IncrementalCache\n  readonly cacheLifeProfiles?: { [profile: string]: CacheLife }\n\n  readonly isOnDemandRevalidate?: boolean\n  readonly isPrerendering?: boolean\n  readonly isRevalidate?: boolean\n\n  forceDynamic?: boolean\n  fetchCache?: AppSegmentConfig['fetchCache']\n\n  forceStatic?: boolean\n  dynamicShouldError?: boolean\n  pendingRevalidates?: Record<string, Promise<any>>\n  pendingRevalidateWrites?: Array<Promise<void>> // This is like pendingRevalidates but isn't used for deduping.\n  readonly afterContext: AfterContext\n\n  dynamicUsageDescription?: string\n  dynamicUsageStack?: string\n  dynamicUsageErr?: DynamicServerError\n\n  nextFetchId?: number\n  pathWasRevalidated?: boolean\n\n  revalidatedTags?: string[]\n  fetchMetrics?: FetchMetrics\n\n  isDraftMode?: boolean\n  isUnstableNoStore?: boolean\n  isPrefetchRequest?: boolean\n\n  requestEndedState?: { ended?: boolean }\n\n  buildId: string\n\n  readonly reactLoadableManifest?: DeepReadonly<\n    Record<string, { files: string[] }>\n  >\n  readonly assetPrefix?: string\n}\n\nexport type WorkAsyncStorage = AsyncLocalStorage<WorkStore>\n\nexport { workAsyncStorageInstance as workAsyncStorage }\n","import { createAsyncLocalStorage } from './async-local-storage'\nimport type { WorkUnitAsyncStorage } from './work-unit-async-storage.external'\n\nexport const workUnitAsyncStorageInstance: WorkUnitAsyncStorage =\n  createAsyncLocalStorage()\n","import type { AsyncLocalStorage } from 'async_hooks'\nimport type { DraftModeProvider } from '../async-storage/draft-mode-provider'\nimport type { ResponseCookies } from '../web/spec-extension/cookies'\nimport type { ReadonlyHeaders } from '../web/spec-extension/adapters/headers'\nimport type { ReadonlyRequestCookies } from '../web/spec-extension/adapters/request-cookies'\nimport type { CacheSignal } from './cache-signal'\nimport type { DynamicTrackingState } from './dynamic-rendering'\n\n// Share the instance module in the next-shared layer\nimport { workUnitAsyncStorageInstance } from './work-unit-async-storage-instance' with { 'turbopack-transition': 'next-shared' }\nimport type { ServerComponentsHmrCache } from '../response-cache'\nimport type {\n  RenderResumeDataCache,\n  PrerenderResumeDataCache,\n} from '../resume-data-cache/resume-data-cache'\n\ntype WorkUnitPhase = 'action' | 'render' | 'after'\n\ntype PhasePartial = {\n  /** NOTE: Will be mutated as phases change */\n  phase: WorkUnitPhase\n}\n\nexport type RequestStore = {\n  type: 'request'\n\n  /**\n   * The URL of the request. This only specifies the pathname and the search\n   * part of the URL.\n   */\n  readonly url: {\n    /**\n     * The pathname of the requested URL.\n     */\n    readonly pathname: string\n\n    /**\n     * The search part of the requested URL. If the request did not provide a\n     * search part, this will be an empty string.\n     */\n    readonly search: string\n  }\n\n  readonly headers: ReadonlyHeaders\n  // This is mutable because we need to reassign it when transitioning from the action phase to the render phase.\n  // The cookie object itself is deliberately read only and thus can't be updated.\n  cookies: ReadonlyRequestCookies\n  readonly mutableCookies: ResponseCookies\n  readonly userspaceMutableCookies: ResponseCookies\n  readonly draftMode: DraftModeProvider\n  readonly isHmrRefresh?: boolean\n  readonly serverComponentsHmrCache?: ServerComponentsHmrCache\n\n  readonly implicitTags: string[]\n\n  /**\n   * The resume data cache for this request. This will be a immutable cache.\n   */\n  renderResumeDataCache: RenderResumeDataCache | null\n\n  // DEV-only\n  usedDynamic?: boolean\n  prerenderPhase?: boolean\n} & PhasePartial\n\n/**\n * The Prerender store is for tracking information related to prerenders.\n *\n * It can be used for both RSC and SSR prerendering and should be scoped as close\n * to the individual `renderTo...` API call as possible. To keep the type simple\n * we don't distinguish between RSC and SSR prerendering explicitly but instead\n * use conditional object properties to infer which mode we are in. For instance cache tracking\n * only needs to happen during the RSC prerender when we are prospectively prerendering\n * to fill all caches.\n */\nexport type PrerenderStoreModern = {\n  type: 'prerender'\n  readonly implicitTags: string[]\n\n  /**\n   * This signal is aborted when the React render is complete. (i.e. it is the same signal passed to react)\n   */\n  readonly renderSignal: AbortSignal\n  /**\n   * This is the AbortController which represents the boundary between Prerender and dynamic. In some renders it is\n   * the same as the controller for the renderSignal but in others it is a separate controller. It should be aborted\n   * whenever the we are no longer in the prerender phase of rendering. Typically this is after one task or when you call\n   * a sync API which requires the prerender to end immediately\n   */\n  readonly controller: AbortController\n\n  /**\n   * when not null this signal is used to track cache reads during prerendering and\n   * to await all cache reads completing before aborting the prerender.\n   */\n  readonly cacheSignal: null | CacheSignal\n\n  /**\n   * During some prerenders we want to track dynamic access.\n   */\n  readonly dynamicTracking: null | DynamicTrackingState\n\n  // Collected revalidate times and tags for this document during the prerender.\n  revalidate: number // in seconds. 0 means dynamic. INFINITE_CACHE and higher means never revalidate.\n  expire: number // server expiration time\n  stale: number // client expiration time\n  tags: null | string[]\n\n  /**\n   * The resume data cache for this prerender.\n   */\n  prerenderResumeDataCache: PrerenderResumeDataCache | null\n\n  // DEV ONLY\n  // When used this flag informs certain APIs to skip logging because we're\n  // not part of the primary render path and are just prerendering to produce\n  // validation results\n  validating?: boolean\n} & PhasePartial\n\nexport type PrerenderStorePPR = {\n  type: 'prerender-ppr'\n  readonly implicitTags: string[]\n  readonly dynamicTracking: null | DynamicTrackingState\n  // Collected revalidate times and tags for this document during the prerender.\n  revalidate: number // in seconds. 0 means dynamic. INFINITE_CACHE and higher means never revalidate.\n  expire: number // server expiration time\n  stale: number // client expiration time\n  tags: null | string[]\n\n  /**\n   * The resume data cache for this prerender.\n   */\n  prerenderResumeDataCache: PrerenderResumeDataCache\n} & PhasePartial\n\nexport type PrerenderStoreLegacy = {\n  type: 'prerender-legacy'\n  readonly implicitTags: string[]\n  // Collected revalidate times and tags for this document during the prerender.\n  revalidate: number // in seconds. 0 means dynamic. INFINITE_CACHE and higher means never revalidate.\n  expire: number // server expiration time\n  stale: number // client expiration time\n  tags: null | string[]\n} & PhasePartial\n\nexport type PrerenderStore =\n  | PrerenderStoreLegacy\n  | PrerenderStorePPR\n  | PrerenderStoreModern\n\nexport type UseCacheStore = {\n  type: 'cache'\n  readonly implicitTags: string[]\n  // Collected revalidate times and tags for this cache entry during the cache render.\n  revalidate: number // implicit revalidate time from inner caches / fetches\n  expire: number // server expiration time\n  stale: number // client expiration time\n  explicitRevalidate: undefined | number // explicit revalidate time from cacheLife() calls\n  explicitExpire: undefined | number // server expiration time\n  explicitStale: undefined | number // client expiration time\n  tags: null | string[]\n} & PhasePartial\n\nexport type UnstableCacheStore = {\n  type: 'unstable-cache'\n} & PhasePartial\n\n/**\n * The Cache store is for tracking information inside a \"use cache\" or unstable_cache context.\n * Inside this context we should never expose any request or page specific information.\n */\nexport type CacheStore = UseCacheStore | UnstableCacheStore\n\nexport type WorkUnitStore = RequestStore | CacheStore | PrerenderStore\n\nexport type WorkUnitAsyncStorage = AsyncLocalStorage<WorkUnitStore>\n\nexport { workUnitAsyncStorageInstance as workUnitAsyncStorage }\n\nexport function getExpectedRequestStore(\n  callingExpression: string\n): RequestStore {\n  const workUnitStore = workUnitAsyncStorageInstance.getStore()\n  if (workUnitStore) {\n    if (workUnitStore.type === 'request') {\n      return workUnitStore\n    }\n    if (\n      workUnitStore.type === 'prerender' ||\n      workUnitStore.type === 'prerender-ppr' ||\n      workUnitStore.type === 'prerender-legacy'\n    ) {\n      // This should not happen because we should have checked it already.\n      throw new Error(\n        `\\`${callingExpression}\\` cannot be called inside a prerender. This is a bug in Next.js.`\n      )\n    }\n    if (workUnitStore.type === 'cache') {\n      throw new Error(\n        `\\`${callingExpression}\\` cannot be called inside \"use cache\". Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/messages/next-request-in-use-cache`\n      )\n    } else if (workUnitStore.type === 'unstable-cache') {\n      throw new Error(\n        `\\`${callingExpression}\\` cannot be called inside unstable_cache. Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`\n      )\n    }\n  }\n  throw new Error(\n    `\\`${callingExpression}\\` was called outside a request scope. Read more: https://nextjs.org/docs/messages/next-dynamic-api-wrong-context`\n  )\n}\n\nexport function getPrerenderResumeDataCache(\n  workUnitStore: WorkUnitStore\n): PrerenderResumeDataCache | null {\n  if (\n    workUnitStore.type === 'prerender' ||\n    workUnitStore.type === 'prerender-ppr'\n  ) {\n    return workUnitStore.prerenderResumeDataCache\n  }\n\n  return null\n}\n\nexport function getRenderResumeDataCache(\n  workUnitStore: WorkUnitStore\n): RenderResumeDataCache | null {\n  if (\n    workUnitStore.type !== 'prerender-legacy' &&\n    workUnitStore.type !== 'cache' &&\n    workUnitStore.type !== 'unstable-cache'\n  ) {\n    if (workUnitStore.type === 'request') {\n      return workUnitStore.renderResumeDataCache\n    }\n\n    // We return the mutable resume data cache here as an immutable version of\n    // the cache as it can also be used for reading.\n    return workUnitStore.prerenderResumeDataCache\n  }\n\n  return null\n}\n","/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for dynamicIO where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */\nexport function makeHangingPromise<T>(\n  signal: AbortSignal,\n  expression: string\n): Promise<T> {\n  const hangingPromise = new Promise<T>((_, reject) => {\n    signal.addEventListener(\n      'abort',\n      () => {\n        reject(\n          new Error(\n            `During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context.`\n          )\n        )\n      },\n      { once: true }\n    )\n  })\n  // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n  // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n  // your own promise out of it you'll need to ensure you handle the error when it rejects.\n  hangingPromise.catch(ignoreReject)\n  return hangingPromise\n}\n\nfunction ignoreReject() {}\n","const REACT_POSTPONE_TYPE: symbol = Symbol.for('react.postpone')\n\nexport function isPostpone(error: any): boolean {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    error.$$typeof === REACT_POSTPONE_TYPE\n  )\n}\n","'use client'\n\nimport React, { useContext } from 'react'\n\nexport type ServerInsertedHTMLHook = (callbacks: () => React.ReactNode) => void\n\n// Use `React.createContext` to avoid errors from the RSC checks because\n// it can't be imported directly in Server Components:\n//\n//   import { createContext } from 'react'\n//\n// More info: https://github.com/vercel/next.js/pull/40686\nexport const ServerInsertedHTMLContext =\n  React.createContext<ServerInsertedHTMLHook | null>(null as any)\n\nexport function useServerInsertedHTML(callback: () => React.ReactNode): void {\n  const addInsertedServerHTMLCallback = useContext(ServerInsertedHTMLContext)\n  // Should have no effects on client where there's no flush effects provider\n  if (addInsertedServerHTMLCallback) {\n    addInsertedServerHTMLCallback(callback)\n  }\n}\n","module.exports = require('./dist/client/components/navigation')\n"],"names":["React","createCache","CacheProvider","DefaultCacheProvider","useServerInsertedHTML","jsx","_jsx","jsxs","_jsxs","AppRouterCacheProvider","props","options","children","registry","useState","cache","key","compat","prevInsert","insert","inserted","args","enableCssLayer","styles","selector","serialized","name","undefined","push","isGlobal","flush","prevInserted","length","dataEmotionAttribute","globals","forEach","style","Fragment","map","nonce","dangerouslySetInnerHTML","__html","value","generateUtilityClasses","generateUtilityClass","getCircularProgressUtilityClass","slot","circularProgressClasses","PropTypes","clsx","chainPropTypes","composeClasses","keyframes","css","styled","memoTheme","useDefaultProps","capitalize","createSimplePaletteValueFilter","SIZE","circularRotateKeyframe","circularDashKeyframe","rotateAnimation","dashAnimation","useUtilityClasses","ownerState","classes","variant","color","disableShrink","slots","root","svg","circle","CircularProgressRoot","overridesResolver","theme","display","variants","transition","transitions","create","animation","Object","entries","palette","filter","vars","main","CircularProgressSVG","CircularProgressCircle","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","CircularProgress","forwardRef","inProps","ref","className","size","thickness","other","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","width","height","role","viewBox","cx","cy","r","fill","strokeWidth","propTypes","object","string","oneOfType","oneOf","bool","Error","number","sx","arrayOf","func","forbidden","DIGEST","HTTP_ERROR_FALLBACK_ERROR_CODE","process","env","__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS","error","digest","DynamicServerError","isDynamicServerError","DYNAMIC_ERROR_CODE","constructor","description","err","ReadonlyURLSearchParams","RedirectType","ServerInsertedHTMLContext","notFound","permanentRedirect","redirect","unauthorized","unstable_rethrow","useParams","usePathname","useRouter","useSearchParams","useSelectedLayoutSegment","useSelectedLayoutSegments","searchParams","useContext","SearchParamsContext","readonlySearchParams","useMemo","window","bailoutToClientRendering","require","useDynamicRouteParams","PathnameContext","router","AppRouterContext","PathParamsContext","getSelectedLayoutSegmentPath","tree","parallelRouteKey","first","segmentPath","node","parallelRoutes","values","segment","segmentValue","getSegmentValue","startsWith","PAGE_SEGMENT_KEY","context","LayoutRouterContext","selectedLayoutSegments","selectedLayoutSegment","DEFAULT_SEGMENT_KEY","ReadonlyURLSearchParamsError","URLSearchParams","append","delete","set","sort","getRedirectError","getRedirectStatusCodeFromError","getRedirectTypeFromError","getURLFromRedirectError","url","type","statusCode","RedirectStatusCode","TemporaryRedirect","REDIRECT_ERROR_CODE","actionStore","actionAsyncStorage","getStore","redirectType","isAction","replace","PermanentRedirect","isRedirectError","split","slice","join","Number","at","Array","isArray","StaticGenBailoutError","isStaticGenBailoutError","NEXT_STATIC_GEN_BAILOUT","code","isNextRouterError","isBailoutToCSRError","isDynamicUsageError","isPostpone","cause","isDynamicPostpone","METADATA_BOUNDARY_NAME","OUTLET_BOUNDARY_NAME","VIEWPORT_BOUNDARY_NAME","actionAsyncStorageInstance","createAsyncLocalStorage","bindSnapshot","createSnapshot","sharedAsyncLocalStorageNotAvailableError","FakeAsyncLocalStorage","disable","run","exit","enterWith","bind","fn","maybeGlobalAsyncLocalStorage","globalThis","AsyncLocalStorage","snapshot","Postpone","abortAndThrowOnSynchronousRequestDataAccess","abortOnSynchronousPlatformIOAccess","accessedDynamicData","annotateDynamicAccess","consumeDynamicAccess","createDynamicTrackingState","createDynamicValidationState","createPostponedAbortSignal","formatDynamicAPIAccesses","getFirstDynamicReason","isPrerenderInterruptedError","markCurrentScopeAsDynamic","postponeWithTracking","throwIfDisallowedDynamic","throwToInterruptStaticGeneration","trackAllowedDynamicAccess","trackDynamicDataInDynamicRender","trackFallbackParamAccessed","trackSynchronousPlatformIOAccessInDev","trackSynchronousRequestDataAccessInDev","hasPostpone","unstable_postpone","isDebugDynamicAccesses","dynamicAccesses","syncDynamicExpression","syncDynamicErrorWithStack","hasSuspendedDynamic","hasDynamicMetadata","hasDynamicViewport","hasSyncDynamicErrors","dynamicErrors","trackingState","expression","store","workUnitStore","forceDynamic","forceStatic","dynamicShouldError","route","dynamicTracking","revalidate","dynamicUsageDescription","dynamicUsageStack","stack","NODE_ENV","usedDynamic","prerenderStore","workUnitAsyncStorage","_store","abortOnSynchronousDynamicDataAccess","reason","createPrerenderInterruptedError","controller","abort","errorWithStack","requestStore","prerenderPhase","validating","syncDynamicLogged","assertPostpone","createPostponeReason","message","isDynamicPostponeReason","includes","NEXT_PRERENDER_INTERRUPTED","serverDynamic","clientDynamic","access","line","AbortController","x","signal","workStore","workAsyncStorage","isStaticGeneration","fallbackRouteParams","use","makeHangingPromise","renderSignal","hasSuspenseRegex","hasMetadataRegex","RegExp","hasViewportRegex","hasOutletRegex","componentStack","dynamicValidation","test","createErrorWithComponentStack","syncError","syncExpression","syncLogged","console","i","workAsyncStorageInstance","workUnitAsyncStorageInstance","getExpectedRequestStore","getPrerenderResumeDataCache","getRenderResumeDataCache","callingExpression","prerenderResumeDataCache","renderResumeDataCache","hangingPromise","Promise","_","reject","addEventListener","once","catch","ignoreReject","REACT_POSTPONE_TYPE","Symbol","for","$$typeof","createContext","callback","addInsertedServerHTMLCallback","module","exports"],"sourceRoot":"","ignoreList":[0,1,2,26]}