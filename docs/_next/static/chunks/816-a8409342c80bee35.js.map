{"version":3,"file":"static/chunks/816-a8409342c80bee35.js","mappings":"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","sources":["webpack://_N_E/../../src/client/get-domain-locale.ts","webpack://_N_E/../../src/client/link.tsx","webpack://_N_E/../../src/client/use-intersection.tsx","webpack://_N_E/../../src/client/use-merged-ref.ts","webpack://_N_E/../../node_modules/.pnpm/next@15.1.7_@babel+core@7.26.0_babel-plugin-macros@3.1.0_react-dom@19.0.0_react@19.0.0__react@19.0.0_sass@1.82.0/node_modules/next/link.js"],"sourcesContent":["import type { DomainLocale } from '../server/config'\nimport type { normalizeLocalePath as NormalizeFn } from './normalize-locale-path'\nimport type { detectDomainLocale as DetectFn } from './detect-domain-locale'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function getDomainLocale(\n  path: string,\n  locale?: string | false,\n  locales?: string[],\n  domainLocales?: DomainLocale[]\n) {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    const normalizeLocalePath: typeof NormalizeFn =\n      require('./normalize-locale-path').normalizeLocalePath\n    const detectDomainLocale: typeof DetectFn =\n      require('./detect-domain-locale').detectDomainLocale\n\n    const target = locale || normalizeLocalePath(path, locales).detectedLocale\n    const domain = detectDomainLocale(domainLocales, undefined, target)\n    if (domain) {\n      const proto = `http${domain.http ? '' : 's'}://`\n      const finalLocale = target === domain.defaultLocale ? '' : `/${target}`\n      return `${proto}${domain.domain}${normalizePathTrailingSlash(\n        `${basePath}${finalLocale}${path}`\n      )}`\n    }\n    return false\n  } else {\n    return false\n  }\n}\n","'use client'\n\nimport type {\n  NextRouter,\n  PrefetchOptions as RouterPrefetchOptions,\n} from '../shared/lib/router/router'\n\nimport React from 'react'\nimport type { UrlObject } from 'url'\nimport { resolveHref } from './resolve-href'\nimport { isLocalURL } from '../shared/lib/router/utils/is-local-url'\nimport { formatUrl } from '../shared/lib/router/utils/format-url'\nimport { isAbsoluteUrl } from '../shared/lib/utils'\nimport { addLocale } from './add-locale'\nimport { RouterContext } from '../shared/lib/router-context.shared-runtime'\nimport type { AppRouterInstance } from '../shared/lib/app-router-context.shared-runtime'\nimport { useIntersection } from './use-intersection'\nimport { getDomainLocale } from './get-domain-locale'\nimport { addBasePath } from './add-base-path'\nimport { useMergedRef } from './use-merged-ref'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype InternalLinkProps = {\n  /**\n   * The path or URL to navigate to. It can also be an object.\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#with-url-object\n   */\n  href: Url\n  /**\n   * Optional decorator for the path that will be shown in the browser URL bar. Before Next.js 9.5.3 this was used for dynamic routes, check our [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes) to see how it worked. Note: when this path differs from the one provided in `href` the previous `href`/`as` behavior is used as shown in the [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes).\n   */\n  as?: Url\n  /**\n   * Replace the current `history` state instead of adding a new url into the stack.\n   *\n   * @defaultValue `false`\n   */\n  replace?: boolean\n  /**\n   * Whether to override the default scroll behavior\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#disable-scrolling-to-the-top-of-the-page\n   *\n   * @defaultValue `true`\n   */\n  scroll?: boolean\n  /**\n   * Update the path of the current page without rerunning [`getStaticProps`](https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-props), [`getServerSideProps`](https://nextjs.org/docs/pages/building-your-application/data-fetching/get-server-side-props) or [`getInitialProps`](/docs/pages/api-reference/functions/get-initial-props).\n   *\n   * @defaultValue `false`\n   */\n  shallow?: boolean\n  /**\n   * Forces `Link` to send the `href` property to its child.\n   *\n   * @defaultValue `false`\n   */\n  passHref?: boolean\n  /**\n   * Prefetch the page in the background.\n   * Any `<Link />` that is in the viewport (initially or through scroll) will be prefetched.\n   * Prefetch can be disabled by passing `prefetch={false}`. Prefetching is only enabled in production.\n   *\n   * In App Router:\n   * - `null` (default): For statically generated pages, this will prefetch the full React Server Component data. For dynamic pages, this will prefetch up to the nearest route segment with a [`loading.js`](https://nextjs.org/docs/app/api-reference/file-conventions/loading) file. If there is no loading file, it will not fetch the full tree to avoid fetching too much data.\n   * - `true`: This will prefetch the full React Server Component data for all route segments, regardless of whether they contain a segment with `loading.js`.\n   * - `false`: This will not prefetch any data, even on hover.\n   *\n   * In Pages Router:\n   * - `true` (default): The full route & its data will be prefetched.\n   * - `false`: Prefetching will not happen when entering the viewport, but will still happen on hover.\n   * @defaultValue `true` (pages router) or `null` (app router)\n   */\n  prefetch?: boolean | null\n  /**\n   * The active locale is automatically prepended. `locale` allows for providing a different locale.\n   * When `false` `href` has to include the locale as the default behavior is disabled.\n   * Note: This is only available in the Pages Router.\n   */\n  locale?: string | false\n  /**\n   * Enable legacy link behavior.\n   * @defaultValue `false`\n   * @see https://github.com/vercel/next.js/commit/489e65ed98544e69b0afd7e0cfc3f9f6c2b803b7\n   */\n  legacyBehavior?: boolean\n  /**\n   * Optional event handler for when the mouse pointer is moved onto Link\n   */\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is touched.\n   */\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n}\n\n// TODO-APP: Include the full set of Anchor props\n// adding this to the publicly exported type currently breaks existing apps\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type LinkProps<RouteInferType = any> = InternalLinkProps\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<InternalLinkProps>\n\nconst prefetched = new Set<string>()\n\ntype PrefetchOptions = RouterPrefetchOptions & {\n  /**\n   * bypassPrefetchedCheck will bypass the check to see if the `href` has\n   * already been fetched.\n   */\n  bypassPrefetchedCheck?: boolean\n}\n\nfunction prefetch(\n  router: NextRouter,\n  href: string,\n  as: string,\n  options: PrefetchOptions\n): void {\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  if (!isLocalURL(href)) {\n    return\n  }\n\n  // We should only dedupe requests when experimental.optimisticClientCache is\n  // disabled.\n  if (!options.bypassPrefetchedCheck) {\n    const locale =\n      // Let the link's locale prop override the default router locale.\n      typeof options.locale !== 'undefined'\n        ? options.locale\n        : // Otherwise fallback to the router's locale.\n          'locale' in router\n          ? router.locale\n          : undefined\n\n    const prefetchedKey = href + '%' + as + '%' + locale\n\n    // If we've already fetched the key, then don't prefetch it again!\n    if (prefetched.has(prefetchedKey)) {\n      return\n    }\n\n    // Mark this URL as prefetched.\n    prefetched.add(prefetchedKey)\n  }\n\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  router.prefetch(href, as, options).catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n}\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const eventTarget = event.currentTarget as HTMLAnchorElement | SVGAElement\n  const target = eventTarget.getAttribute('target')\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  router: NextRouter | AppRouterInstance,\n  href: string,\n  as: string,\n  replace?: boolean,\n  shallow?: boolean,\n  scroll?: boolean,\n  locale?: string | false\n): void {\n  const { nodeName } = e.currentTarget\n\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A'\n\n  if (isAnchorNodeName && (isModifiedEvent(e) || !isLocalURL(href))) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  const navigate = () => {\n    // If the router is an NextRouter instance it will have `beforePopState`\n    const routerScroll = scroll ?? true\n    if ('beforePopState' in router) {\n      router[replace ? 'replace' : 'push'](href, as, {\n        shallow,\n        locale,\n        scroll: routerScroll,\n      })\n    } else {\n      router[replace ? 'replace' : 'push'](as || href, {\n        scroll: routerScroll,\n      })\n    }\n  }\n\n  navigate()\n}\n\ntype LinkPropsReal = React.PropsWithChildren<\n  Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, keyof LinkProps> &\n    LinkProps\n>\n\nfunction formatStringOrUrl(urlObjOrString: UrlObject | string): string {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString\n  }\n\n  return formatUrl(urlObjOrString)\n}\n\n/**\n * A React component that extends the HTML `<a>` element to provide [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation between routes.\n *\n * It is the primary way to navigate between routes in Next.js.\n *\n * Read more: [Next.js docs: `<Link>`](https://nextjs.org/docs/app/api-reference/components/link)\n */\nconst Link = React.forwardRef<HTMLAnchorElement, LinkPropsReal>(\n  function LinkComponent(props, forwardedRef) {\n    let children: React.ReactNode\n\n    const {\n      href: hrefProp,\n      as: asProp,\n      children: childrenProp,\n      prefetch: prefetchProp = null,\n      passHref,\n      replace,\n      shallow,\n      scroll,\n      locale,\n      onClick,\n      onMouseEnter: onMouseEnterProp,\n      onTouchStart: onTouchStartProp,\n      legacyBehavior = false,\n      ...restProps\n    } = props\n\n    children = childrenProp\n\n    if (\n      legacyBehavior &&\n      (typeof children === 'string' || typeof children === 'number')\n    ) {\n      children = <a>{children}</a>\n    }\n\n    const router = React.useContext(RouterContext)\n\n    const prefetchEnabled = prefetchProp !== false\n\n    if (process.env.NODE_ENV !== 'production') {\n      function createPropError(args: {\n        key: string\n        expected: string\n        actual: string\n      }) {\n        return new Error(\n          `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n            (typeof window !== 'undefined'\n              ? \"\\nOpen your browser's console to view the Component stack trace.\"\n              : '')\n        )\n      }\n\n      // TypeScript trick for type-guarding:\n      const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n        href: true,\n      } as const\n      const requiredProps: LinkPropsRequired[] = Object.keys(\n        requiredPropsGuard\n      ) as LinkPropsRequired[]\n      requiredProps.forEach((key: LinkPropsRequired) => {\n        if (key === 'href') {\n          if (\n            props[key] == null ||\n            (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n          ) {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: props[key] === null ? 'null' : typeof props[key],\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n\n      // TypeScript trick for type-guarding:\n      const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n        as: true,\n        replace: true,\n        scroll: true,\n        shallow: true,\n        passHref: true,\n        prefetch: true,\n        locale: true,\n        onClick: true,\n        onMouseEnter: true,\n        onTouchStart: true,\n        legacyBehavior: true,\n      } as const\n      const optionalProps: LinkPropsOptional[] = Object.keys(\n        optionalPropsGuard\n      ) as LinkPropsOptional[]\n      optionalProps.forEach((key: LinkPropsOptional) => {\n        const valType = typeof props[key]\n\n        if (key === 'as') {\n          if (props[key] && valType !== 'string' && valType !== 'object') {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: valType,\n            })\n          }\n        } else if (key === 'locale') {\n          if (props[key] && valType !== 'string') {\n            throw createPropError({\n              key,\n              expected: '`string`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'onClick' ||\n          key === 'onMouseEnter' ||\n          key === 'onTouchStart'\n        ) {\n          if (props[key] && valType !== 'function') {\n            throw createPropError({\n              key,\n              expected: '`function`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'replace' ||\n          key === 'scroll' ||\n          key === 'shallow' ||\n          key === 'passHref' ||\n          key === 'prefetch' ||\n          key === 'legacyBehavior'\n        ) {\n          if (props[key] != null && valType !== 'boolean') {\n            throw createPropError({\n              key,\n              expected: '`boolean`',\n              actual: valType,\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n    }\n\n    const { href, as } = React.useMemo(() => {\n      if (!router) {\n        const resolvedHref = formatStringOrUrl(hrefProp)\n        return {\n          href: resolvedHref,\n          as: asProp ? formatStringOrUrl(asProp) : resolvedHref,\n        }\n      }\n\n      const [resolvedHref, resolvedAs] = resolveHref(router, hrefProp, true)\n\n      return {\n        href: resolvedHref,\n        as: asProp ? resolveHref(router, asProp) : resolvedAs || resolvedHref,\n      }\n    }, [router, hrefProp, asProp])\n\n    const previousHref = React.useRef<string>(href)\n    const previousAs = React.useRef<string>(as)\n\n    // This will return the first child, if multiple are provided it will throw an error\n    let child: any\n    if (legacyBehavior) {\n      if (process.env.NODE_ENV === 'development') {\n        if (onClick) {\n          console.warn(\n            `\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`\n          )\n        }\n        if (onMouseEnterProp) {\n          console.warn(\n            `\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`\n          )\n        }\n        try {\n          child = React.Children.only(children)\n        } catch (err) {\n          if (!children) {\n            throw new Error(\n              `No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`\n            )\n          }\n          throw new Error(\n            `Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n              (typeof window !== 'undefined'\n                ? \" \\nOpen your browser's console to view the Component stack trace.\"\n                : '')\n          )\n        }\n      } else {\n        child = React.Children.only(children)\n      }\n    } else {\n      if (process.env.NODE_ENV === 'development') {\n        if ((children as any)?.type === 'a') {\n          throw new Error(\n            'Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'\n          )\n        }\n      }\n    }\n\n    const childRef: any = legacyBehavior\n      ? child && typeof child === 'object' && child.ref\n      : forwardedRef\n\n    const [setIntersectionRef, isVisible, resetVisible] = useIntersection({\n      rootMargin: '200px',\n    })\n\n    const setIntersectionWithResetRef = React.useCallback(\n      (el: Element) => {\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n          resetVisible()\n          previousAs.current = as\n          previousHref.current = href\n        }\n\n        setIntersectionRef(el)\n      },\n      [as, href, resetVisible, setIntersectionRef]\n    )\n\n    const setRef = useMergedRef(setIntersectionWithResetRef, childRef)\n\n    // Prefetch the URL if we haven't already and it's visible.\n    React.useEffect(() => {\n      // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n      if (process.env.NODE_ENV !== 'production') {\n        return\n      }\n\n      if (!router) {\n        return\n      }\n\n      // If we don't need to prefetch the URL, don't do prefetch.\n      if (!isVisible || !prefetchEnabled) {\n        return\n      }\n\n      // Prefetch the URL.\n      prefetch(router, href, as, { locale })\n    }, [as, href, isVisible, locale, prefetchEnabled, router?.locale, router])\n\n    const childProps: {\n      onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n      onMouseEnter: React.MouseEventHandler<HTMLAnchorElement>\n      onClick: React.MouseEventHandler<HTMLAnchorElement>\n      href?: string\n      ref?: any\n    } = {\n      ref: setRef,\n      onClick(e) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!e) {\n            throw new Error(\n              `Component rendered inside next/link has to pass click event to \"onClick\" prop.`\n            )\n          }\n        }\n\n        if (!legacyBehavior && typeof onClick === 'function') {\n          onClick(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onClick === 'function'\n        ) {\n          child.props.onClick(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        if (e.defaultPrevented) {\n          return\n        }\n\n        linkClicked(e, router, href, as, replace, shallow, scroll, locale)\n      },\n      onMouseEnter(e) {\n        if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n          onMouseEnterProp(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onMouseEnter === 'function'\n        ) {\n          child.props.onMouseEnter(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        prefetch(router, href, as, {\n          locale,\n          priority: true,\n          // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n          bypassPrefetchedCheck: true,\n        })\n      },\n      onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START\n        ? undefined\n        : function onTouchStart(e) {\n            if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n              onTouchStartProp(e)\n            }\n\n            if (\n              legacyBehavior &&\n              child.props &&\n              typeof child.props.onTouchStart === 'function'\n            ) {\n              child.props.onTouchStart(e)\n            }\n\n            if (!router) {\n              return\n            }\n\n            prefetch(router, href, as, {\n              locale,\n              priority: true,\n              // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n              bypassPrefetchedCheck: true,\n            })\n          },\n    }\n\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the domain and locale.\n    if (isAbsoluteUrl(as)) {\n      childProps.href = as\n    } else if (\n      !legacyBehavior ||\n      passHref ||\n      (child.type === 'a' && !('href' in child.props))\n    ) {\n      const curLocale = typeof locale !== 'undefined' ? locale : router?.locale\n\n      // we only render domain locales if we are currently on a domain locale\n      // so that locale links are still visitable in development/preview envs\n      const localeDomain =\n        router?.isLocaleDomain &&\n        getDomainLocale(as, curLocale, router?.locales, router?.domainLocales)\n\n      childProps.href =\n        localeDomain ||\n        addBasePath(addLocale(as, curLocale, router?.defaultLocale))\n    }\n\n    return legacyBehavior ? (\n      React.cloneElement(child, childProps)\n    ) : (\n      <a {...restProps} {...childProps}>\n        {children}\n      </a>\n    )\n  }\n)\n\nexport default Link\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport {\n  requestIdleCallback,\n  cancelIdleCallback,\n} from './request-idle-callback'\n\ntype UseIntersectionObserverInit = Pick<\n  IntersectionObserverInit,\n  'rootMargin' | 'root'\n>\n\ntype UseIntersection = { disabled?: boolean } & UseIntersectionObserverInit & {\n    rootRef?: React.RefObject<HTMLElement | null> | null\n  }\ntype ObserveCallback = (isVisible: boolean) => void\ntype Identifier = {\n  root: Element | Document | null\n  margin: string\n}\ntype Observer = {\n  id: Identifier\n  observer: IntersectionObserver\n  elements: Map<Element, ObserveCallback>\n}\n\nconst hasIntersectionObserver = typeof IntersectionObserver === 'function'\n\nconst observers = new Map<Identifier, Observer>()\nconst idList: Identifier[] = []\n\nfunction createObserver(options: UseIntersectionObserverInit): Observer {\n  const id = {\n    root: options.root || null,\n    margin: options.rootMargin || '',\n  }\n  const existing = idList.find(\n    (obj) => obj.root === id.root && obj.margin === id.margin\n  )\n  let instance: Observer | undefined\n\n  if (existing) {\n    instance = observers.get(existing)\n    if (instance) {\n      return instance\n    }\n  }\n\n  const elements = new Map<Element, ObserveCallback>()\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      const callback = elements.get(entry.target)\n      const isVisible = entry.isIntersecting || entry.intersectionRatio > 0\n      if (callback && isVisible) {\n        callback(isVisible)\n      }\n    })\n  }, options)\n  instance = {\n    id,\n    observer,\n    elements,\n  }\n\n  idList.push(id)\n  observers.set(id, instance)\n  return instance\n}\n\nfunction observe(\n  element: Element,\n  callback: ObserveCallback,\n  options: UseIntersectionObserverInit\n): () => void {\n  const { id, observer, elements } = createObserver(options)\n  elements.set(element, callback)\n\n  observer.observe(element)\n  return function unobserve(): void {\n    elements.delete(element)\n    observer.unobserve(element)\n\n    // Destroy observer when there's nothing left to watch:\n    if (elements.size === 0) {\n      observer.disconnect()\n      observers.delete(id)\n      const index = idList.findIndex(\n        (obj) => obj.root === id.root && obj.margin === id.margin\n      )\n      if (index > -1) {\n        idList.splice(index, 1)\n      }\n    }\n  }\n}\n\nexport function useIntersection<T extends Element>({\n  rootRef,\n  rootMargin,\n  disabled,\n}: UseIntersection): [(element: T | null) => void, boolean, () => void] {\n  const isDisabled: boolean = disabled || !hasIntersectionObserver\n\n  const [visible, setVisible] = useState(false)\n  const elementRef = useRef<T | null>(null)\n  const setElement = useCallback((element: T | null) => {\n    elementRef.current = element\n  }, [])\n\n  useEffect(() => {\n    if (hasIntersectionObserver) {\n      if (isDisabled || visible) return\n\n      const element = elementRef.current\n      if (element && element.tagName) {\n        const unobserve = observe(\n          element,\n          (isVisible) => isVisible && setVisible(isVisible),\n          { root: rootRef?.current, rootMargin }\n        )\n\n        return unobserve\n      }\n    } else {\n      if (!visible) {\n        const idleCallback = requestIdleCallback(() => setVisible(true))\n        return () => cancelIdleCallback(idleCallback)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled, rootMargin, rootRef, visible, elementRef.current])\n\n  const resetVisible = useCallback(() => {\n    setVisible(false)\n  }, [])\n\n  return [setElement, visible, resetVisible]\n}\n","import { useMemo, useRef, type Ref } from 'react'\n\n// This is a compatibility hook to support React 18 and 19 refs.\n// In 19, a cleanup function from refs may be returned.\n// In 18, returning a cleanup function creates a warning.\n// Since we take userspace refs, we don't know ahead of time if a cleanup function will be returned.\n// This implements cleanup functions with the old behavior in 18.\n// We know refs are always called alternating with `null` and then `T`.\n// So a call with `null` means we need to call the previous cleanup functions.\nexport function useMergedRef<TElement>(\n  refA: Ref<TElement>,\n  refB: Ref<TElement>\n): Ref<TElement> {\n  const cleanupA = useRef<() => void>(() => {})\n  const cleanupB = useRef<() => void>(() => {})\n\n  return useMemo(() => {\n    if (!refA || !refB) {\n      return refA || refB\n    }\n\n    return (current: TElement | null): void => {\n      if (current === null) {\n        cleanupA.current()\n        cleanupB.current()\n      } else {\n        cleanupA.current = applyRef(refA, current)\n        cleanupB.current = applyRef(refB, current)\n      }\n    }\n  }, [refA, refB])\n}\n\nfunction applyRef<TElement>(\n  refA: NonNullable<Ref<TElement>>,\n  current: TElement\n) {\n  if (typeof refA === 'function') {\n    const cleanup = refA(current)\n    if (typeof cleanup === 'function') {\n      return cleanup\n    } else {\n      return () => refA(null)\n    }\n  } else {\n    refA.current = current\n    return () => {\n      refA.current = null\n    }\n  }\n}\n","module.exports = require('./dist/client/link')\n"],"names":["getDomainLocale","basePath","process","env","__NEXT_ROUTER_BASEPATH","path","locale","locales","domainLocales","__NEXT_I18N_SUPPORT","normalizeLocalePath","require","detectDomainLocale","target","detectedLocale","domain","undefined","proto","http","finalLocale","defaultLocale","normalizePathTrailingSlash","prefetched","Set","prefetch","router","href","as","options","window","isLocalURL","bypassPrefetchedCheck","prefetchedKey","has","add","catch","err","NODE_ENV","isModifiedEvent","event","eventTarget","currentTarget","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","linkClicked","e","replace","shallow","scroll","nodeName","isAnchorNodeName","toUpperCase","preventDefault","navigate","routerScroll","formatStringOrUrl","urlObjOrString","formatUrl","Link","React","forwardRef","LinkComponent","props","forwardedRef","children","hrefProp","asProp","childrenProp","prefetchProp","passHref","onClick","onMouseEnter","onMouseEnterProp","onTouchStart","onTouchStartProp","legacyBehavior","restProps","a","useContext","RouterContext","prefetchEnabled","createPropError","args","Error","key","expected","actual","requiredPropsGuard","requiredProps","Object","keys","forEach","_","optionalPropsGuard","optionalProps","valType","useMemo","resolvedHref","resolvedAs","resolveHref","previousHref","useRef","previousAs","child","console","warn","Children","only","type","childRef","ref","setIntersectionRef","isVisible","resetVisible","useIntersection","rootMargin","setIntersectionWithResetRef","useCallback","el","current","setRef","useMergedRef","useEffect","childProps","defaultPrevented","priority","__NEXT_LINK_NO_TOUCH_START","isAbsoluteUrl","curLocale","localeDomain","isLocaleDomain","addBasePath","addLocale","cloneElement","hasIntersectionObserver","IntersectionObserver","observers","Map","idList","createObserver","id","root","margin","existing","find","obj","instance","get","elements","observer","entries","entry","callback","isIntersecting","intersectionRatio","push","set","observe","element","unobserve","delete","size","disconnect","index","findIndex","splice","rootRef","disabled","isDisabled","visible","setVisible","useState","elementRef","setElement","tagName","idleCallback","requestIdleCallback","cancelIdleCallback","refA","refB","cleanupA","cleanupB","applyRef","cleanup","module","exports"],"sourceRoot":"","ignoreList":[4]}