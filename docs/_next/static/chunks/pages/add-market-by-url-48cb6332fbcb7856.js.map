{"version":3,"file":"static/chunks/pages/add-market-by-url-48cb6332fbcb7856.js","mappings":"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","sources":["webpack://_N_E/?38b8","webpack://_N_E/./src/components/page/add-market-by-url/ui/market-input-form/MarketInputForm.tsx","webpack://_N_E/./src/components/page/add-market-by-url/ui/AddMarketByUrl.tsx","webpack://_N_E/./src/pages/add-market-by-url/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/add-market-by-url\",\n      function () {\n        return require(\"private-next-pages/add-market-by-url/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/add-market-by-url\"])\n      });\n    }\n  ","import React, { useState, useCallback } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Box from '@mui/material/Box';\nimport { useDebounceFn } from 'ahooks';\nimport { useTranslation } from '@fanfanlo';\nimport axios from 'axios';\n\ninterface MarketInputFormProps {\n  // Callback to notify parent when valid input is ready\n  onMarketConfigReady: (config: { str: string; isUrl: boolean }) => void;\n  // Initial values if needed\n  initialValue?: string;\n  initialIsUrl?: boolean;\n  isFullMarketPage:boolean;\n}\n\nasync function loadHtmlFromUrl(value: string): Promise<string> {\n  const url = `https://autumn-mouse-8da2.mailregios.workers.dev/?url=${encodeURIComponent(value)}`\n  const res = await axios.get(url);\n  if(!res.data || !res.data.html){\n    throw new Error('Failed to fetch HTML content.')\n  }\n  // 这个html就是html的内容。\n    // 获取url的origin\n  const { origin } = new URL(value);\n  // 替换所有script和link标签的src/href为绝对路径\n  let html = res.data.html;\n  // 拼接时去除重复斜杠，保证只有一个/\n  function joinOriginPath(origin: string, path: string) {\n    let url: string;\n    if (origin.endsWith('/') && path.startsWith('/')) {\n      url = origin + path.slice(1);\n    } else if (!origin.endsWith('/') && !path.startsWith('/')) {\n      url = origin + '/' + path;\n    } else {\n      url = origin + path;\n    }\n    // 追加__time__参数\n    const timeParam = `__time__=${Date.now()}`;\n    if (url.includes('?')) {\n      // 已有参数，判断是否已带__time__，避免重复\n      if (/([&?])__time__=/.test(url)) return url;\n      return url + (url.endsWith('?') || url.endsWith('&') ? '' : '&') + timeParam;\n    } else {\n      return url + '?' + timeParam;\n    }\n  }\n  // 替换<script src=\"...\">\n  html = html.replace(/(<script[^>]*src=[\"'])(?!https?:|\\/\\/)([^\"'>]+)/gi, (match:any, p1:any, p2:any) => `${p1}${joinOriginPath(origin, p2)}`);\n  // 替换<link href=\"...\">，常用于css\n  html = html.replace(/(<link[^>]*href=[\"'])(?!https?:|\\/\\/)([^\"'>]+)/gi, (match:any, p1:any, p2:any) => `${p1}${joinOriginPath(origin, p2)}`);\n  // 替换<style>@import '...'</style> 里的路径（简单处理）\n  html = html.replace(/(@import\\s+[\"'])(?!https?:|\\/\\/)([^\"']+)/gi, (match:any, p1:any, p2:any) => `${p1}${joinOriginPath(origin, p2)}`);\n  console.log('parsed html=', html)\n  return html;\n}\n\nconst MarketInputForm: React.FC<MarketInputFormProps> = ({ \n  isFullMarketPage,\n  onMarketConfigReady,\n  initialValue = '',\n  initialIsUrl = true, // Default to URL input\n}) => {\n  const [inputValue, setInputValue] = useState<string>(initialValue);\n  const [isUrl, setIsUrl] = useState<boolean>(initialIsUrl);\n  const [error, setError] = useState<string>('');\n  const {t} = useTranslation(\"homepage/components/page/add-market-by-url/ui/market-input-form/content\");\n  // Basic URL validation (can be improved)\n  const isValidUrl = (url: string): boolean => {\n    try {\n      new URL(url);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n\n  // The core logic for processing input\n  const processInput = useCallback(async (value: string, isUrlChecked: boolean) => {\n    console.log('Processing input:', value, 'Is URL:', isUrlChecked);\n    if(!value){\n      setError('')\n      onMarketConfigReady({ str: '', isUrl });\n      console.log('cleared')\n      return;\n    }\n    if (isUrlChecked) {\n      if (value && isValidUrl(value)) {\n        const html = await loadHtmlFromUrl(value)\n        if(html){\n          setError('');\n          onMarketConfigReady({ str: html, isUrl: false });\n        }else{\n          setError('Failed to fetch HTML content.');\n        }\n      } else if (value) {\n        setError('Please enter a valid URL.');\n      } else {\n        setError(''); // Clear error if input is empty\n      }\n    } else {\n      // For HTML content, maybe trigger on button click or explicit action?\n      // For now, let's assume direct content is always 'ready'\n      setError(''); \n      onMarketConfigReady({ str: value, isUrl: false });\n    }\n  }, [onMarketConfigReady]);\n\n  // Create the debounced version of the processing function\n  const { run: debouncedProcessInput } = useDebounceFn(\n    processInput,\n    {\n      wait: 500, // Debounce wait time in milliseconds (e.g., 500ms)\n    },\n  );\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n    setInputValue(newValue);\n    // Call the debounced function when typing\n    debouncedProcessInput(newValue, isUrl);\n  };\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newIsUrl = event.target.checked;\n    setIsUrl(newIsUrl);\n    // Call the original function immediately when checkbox changes\n    processInput(inputValue, newIsUrl); \n  };\n  let isUrlLabel = \"\";\n  if(isUrl){\n    isUrlLabel = isFullMarketPage ? t('content.full.url') : t('content.item.url');\n  }else{\n    isUrlLabel = isFullMarketPage ? t('content.full.html') : t('content.item.html');\n  }\n  let placeholder = \"\"\n  if(!isUrl){\n    placeholder = isFullMarketPage ? `<html><body><div>script list<div></body></html>` :`<html><body><div>${t('content.item.come')}<a href=\"https://github.com/your-name/your-repo/docs/index.html\">${t('content.item.myMarketName')}</a>${t('content.item.stroll')}</div></body></html>`\n  }else{\n    placeholder = isFullMarketPage ? `https://github.com/your-name/your-repo/docs/market.html` : `https://github.com/your-name/your-repo/docs/summary.html`\n  }\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n      <TextField\n        label={isUrlLabel}\n        variant=\"outlined\"\n        fullWidth\n        value={inputValue}\n        onChange={handleInputChange}\n        error={!!error}\n        helperText={error}\n        placeholder={placeholder}\n        multiline={!isUrl} // Allow multiline for HTML\n        rows={isUrl ? 1 : 4} // Adjust rows based on type\n      />\n      <FormControlLabel\n        control={\n          <Checkbox \n            checked={isUrl} \n            onChange={handleCheckboxChange} \n          />\n        }\n        label={t(\"content.isUrl\")}\n      />\n    </Box>\n  );\n};\n\nexport default MarketInputForm;\n","import React, { useState, useCallback } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport TextField from '@mui/material/TextField';\nimport { IFrameReactContainer, useTranslation } from '@fanfanlo';\nimport { IMarketConf, IUrlOrHtmlStringConf } from './add-market-by-url.intf';\nimport MarketInputForm from './market-input-form/MarketInputForm';\n\nconst AddMarketByUrl: React.FC = () => {\n  const [name, setName] = useState<string>('');\n  const [summary, setSummary] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [urlOrHtmlConf, setUrlOrHtmlConf] = useState<IUrlOrHtmlStringConf | null>(null);\n  const [fullMarketConf, setFullMarketConf] = useState<IUrlOrHtmlStringConf | null>(null);\n\n  const {t} = useTranslation(\"homepage/components/page/add-market-by-url/ui/content\");\n  const iframeStyle: React.CSSProperties = {\n    minWidth: '300px',\n    minHeight: '200px',\n    border: '1px solid #ccc',\n    display: 'block',\n  };\n\n  const handleMarketConfigReady = useCallback((config: IUrlOrHtmlStringConf) => {\n    setUrlOrHtmlConf(config);\n  }, []);\n\n  const handleFullMarketConfigReady = useCallback((config: IUrlOrHtmlStringConf) => {\n    setFullMarketConf(config);\n  }, []);\n\n  const itemMarket = urlOrHtmlConf;\n\n  return (\n    <Card sx={{ maxWidth: 800, margin: 'auto', mt: 2 }}>\n      <CardContent>\n        <Box sx={{ mb: 2, color: 'error.main' }}>\n          {t(\"content.warning\")}\n        </Box>\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n          {t(\"content.setNewMarket\")}\n        </Typography>\n\n        <Box sx={{ mb: 2 }}>\n          <TextField\n            fullWidth\n            label={t(\"content.marketName\")}\n            variant=\"outlined\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            sx={{ mb: 1 }}\n          />\n          <TextField\n            fullWidth\n            label={t(\"content.marketSummary\")}\n            variant=\"outlined\"\n            value={summary}\n            onChange={(e) => setSummary(e.target.value)}\n            multiline\n            rows={2}\n            sx={{ mb: 1 }}\n          />\n          <TextField\n            fullWidth\n            label={t(\"content.marketDescription\")}\n            variant=\"outlined\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            multiline\n            rows={4}\n            sx={{ mb: 2 }}\n          />\n        </Box>\n\n        <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\n          {t(\"content.itemMarket\")}\n        </Typography>\n        <MarketInputForm onMarketConfigReady={handleMarketConfigReady} isFullMarketPage={false} />\n\n        <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\n          {t(\"content.fullMarket\")}\n        </Typography>\n        <MarketInputForm onMarketConfigReady={handleFullMarketConfigReady} isFullMarketPage={true} />\n\n        <Divider sx={{ my: 2 }} />\n\n        {(name || summary || description || itemMarket || fullMarketConf) && (\n          <Box>\n            <hr />\n            \n            <Typography sx={{textAlign: 'center'}} variant=\"h6\" component=\"h3\" gutterBottom>\n            {t(\"content.settingPreview\")}\n              \n            </Typography>\n            <Typography variant=\"body1\" component=\"p\" paragraph>\n              <strong>{t(\"content.marketName\")}:</strong> {name || t(\"content.isNotSet\")}\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\" paragraph>\n              <strong>{t(\"content.marketSummary\")}:</strong> {summary || t(\"content.isNotSet\")}\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\" paragraph>\n              <strong>{t(\"content.marketDescription\")}:</strong> {description || t(\"content.isNotSet\")}\n            </Typography>\n\n            {itemMarket && (\n              <Box sx={{ mb: 2 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  {t(\"content.marketCardPreview\")}\n                </Typography>\n                <IFrameReactContainer key={`item-market-${itemMarket.str}`}\n                  url={itemMarket.isUrl ? itemMarket.str : undefined}\n                  content={!itemMarket.isUrl ? itemMarket.str : undefined}\n                  style={iframeStyle}\n                />\n              </Box>\n            )}\n\n            {fullMarketConf && (\n              <Box>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  {t(\"content.marketFullPreview\")}  \n                </Typography>\n                <IFrameReactContainer key={`full-market-${fullMarketConf.str}`}\n                  url={fullMarketConf.isUrl ? fullMarketConf.str : undefined}\n                  content={!fullMarketConf.isUrl ? fullMarketConf.str : undefined}\n                  style={iframeStyle}\n                />\n              </Box>\n            )}\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default AddMarketByUrl;\n","import { AppbarContainer, AppShell } from \"@app/ui\";\r\nimport { Dispatcher, useTranslation } from \"@fanfanlo\";\r\nimport { IMarketConf } from \"@src/components/page/add-market-by-url/ui/add-market-by-url.intf\";\r\nimport AddMarketByUrl from \"@src/components/page/add-market-by-url/ui/AddMarketByUrl\";\r\n\r\n\r\n\r\nexport default function AddMarketByUrlPage(){\r\n    const marketConf: IMarketConf = {\r\n        name: 'Test Market URL',\r\n        summary: 'Test Summary',\r\n        description: 'Test Description',\r\n        itemMarket: {\r\n          str: '',\r\n          isUrl: true,\r\n        },\r\n        fullMarket: {\r\n          str: '',\r\n          isUrl: true,\r\n        },\r\n      };\r\n    const dispatcher = new Dispatcher()\r\n    const {t} = useTranslation('homepage/pages/add-market-by-url/content')\r\n    return (\r\n        <AppShell>\r\n            <AppbarContainer appbarProps={{title: t(\"content.title\"), back:true,backDispatcher:dispatcher}} />\r\n            {/* <AddMarketByUrlContent /> */}\r\n            <AddMarketByUrl />\r\n        </AppShell>\r\n    )\r\n}"],"names":["React","useState","useCallback","TextField","Checkbox","FormControlLabel","Box","useDebounceFn","useTranslation","axios","loadHtmlFromUrl","value","url","encodeURIComponent","res","get","data","html","Error","origin","URL","joinOriginPath","path","endsWith","startsWith","slice","timeParam","Date","now","includes","test","replace","match","p1","p2","console","log","MarketInputForm","isFullMarketPage","onMarketConfigReady","initialValue","initialIsUrl","inputValue","setInputValue","isUrl","setIsUrl","error","setError","t","isValidUrl","_","processInput","isUrlChecked","str","run","debouncedProcessInput","wait","handleInputChange","event","newValue","target","handleCheckboxChange","newIsUrl","checked","isUrlLabel","placeholder","sx","display","flexDirection","gap","label","variant","fullWidth","onChange","helperText","multiline","rows","control","Card","CardContent","Typography","Divider","IFrameReactContainer","AddMarketByUrl","name","setName","summary","setSummary","description","setDescription","urlOrHtmlConf","setUrlOrHtmlConf","fullMarketConf","setFullMarketConf","iframeStyle","minWidth","minHeight","border","handleMarketConfigReady","config","handleFullMarketConfigReady","itemMarket","maxWidth","margin","mt","mb","color","component","gutterBottom","e","my","hr","textAlign","paragraph","strong","undefined","content","style","AppbarContainer","AppShell","Dispatcher","AddMarketByUrlPage","marketConf","fullMarket","dispatcher","appbarProps","title","back","backDispatcher"],"sourceRoot":"","ignoreList":[]}