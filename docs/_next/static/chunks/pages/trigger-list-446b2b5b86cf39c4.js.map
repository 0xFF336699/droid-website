{"version":3,"file":"static/chunks/pages/trigger-list-446b2b5b86cf39c4.js","mappings":"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","sources":["webpack://_N_E/./src/components/page/trigger-list/groups/time/timeout/timeout.tsx","webpack://_N_E/./src/components/page/trigger-list/groups/time/time-group.ts","webpack://_N_E/./src/components/page/trigger-list/groups/app/activity/activity-in.tsx","webpack://_N_E/./src/components/page/trigger-list/groups/app/app-group.ts","webpack://_N_E/./src/components/page/trigger-list/trigger.data.ts","webpack://_N_E/./src/pages/trigger-list/index.tsx","webpack://_N_E/?04e5"],"sourcesContent":["import { ActionOrTriggerListTypeEnum, IActionOrTriggerListPageParams } from \"@app/static\";\r\nimport { getTriggerOrActionListPageParams, ProjectMemberType, triggerTimeoutUtils } from \"@droid/project-interface\";\r\nimport { projectEventUtils } from \"@droid/project-interface\";\r\nimport { throwTraceError } from \"@fanfanlo\";\r\nimport { createActionOrTriggerButtonRender, IActionOrTriggerItem } from \"../../../../../../components/trigger-list-action-list-common/ITriggerList-IActionList-common.intf\";\r\n\r\nexport const timeoutTriggerItem:IActionOrTriggerItem = {\r\n    id: \"timeout-trigger-item-ce8c\",\r\n    i18nNs: \"homepage/components/page/trigger-list/groups/time/timeout/content\",\r\n    nameKey: \"content.name\",\r\n    group: \"timeoutTriggerItem.group\",\r\n    descriptionKey: \"content.description\",\r\n    type: \"trigger\",\r\n    LinkRender: createActionOrTriggerButtonRender(onSelect)\r\n}\r\n\r\nfunction onSelect({query, item}:{query:IActionOrTriggerListPageParams, item:IActionOrTriggerItem}){\r\n    const res = getTriggerOrActionListPageParams(query)\r\n    switch(query.type){\r\n        case ActionOrTriggerListTypeEnum.addAction:\r\n            const trigger = triggerTimeoutUtils.createDefultData()\r\n            if(!res.data.triggerGroup){\r\n                return throwTraceError('triggerGroup is not found', query)\r\n            }\r\n            projectEventUtils.dispatchEditEvent(projectEventUtils.EditType.add, {\r\n                projectMemberType: ProjectMemberType.triggerGroup,\r\n                data:trigger,\r\n                projectInfo:res.data\r\n            })\r\n            // res.data.triggerGroup.list.push(trigger)\r\n            // router.back()\r\n            window.history.back()\r\n            break;\r\n        case ActionOrTriggerListTypeEnum.updateAction:\r\n            \r\n            break;\r\n    }\r\n}","import { IActionOrTriggerGroup } from \"../../../../trigger-list-action-list-common/ITriggerList-IActionList-common.intf\";\r\nimport { timeoutTriggerItem } from \"./timeout/timeout\";\r\n\r\nexport const timeGroup:IActionOrTriggerGroup = {\r\n    i18nNs: \"homepage/components/page/trigger-list/groups/time/content\",\r\n    nameKey: \"content.name\",\r\n    descriptionKey: \"content.description\",\r\n    items: [\r\n        timeoutTriggerItem\r\n    ]\r\n}","import { IActionOrTriggerListPageParams } from \"@app/static\";\r\nimport { autoWebViewJs, isRealInAndroid, openPnAnInfoWindow, PnAnResultData } from \"@droid/android\";\r\nimport { getTriggerOrActionListPageParams, projectEventUtils } from \"@droid/project-interface\";\r\nimport { createActionOrTriggerButtonRender, IActionOrTriggerItem } from \"@src/components/trigger-list-action-list-common/ITriggerList-IActionList-common.intf\";\r\nimport { triggerWhenActivityInUtils } from \"@droid/project-interface\";\r\nimport { ProjectMemberType } from \"@droid/project-interface\";\r\nimport { createRandomEnglishCharacters } from \"@fanfanlo\";\r\n\r\n\r\nexport const activityInItem:IActionOrTriggerItem = {\r\n    id: \"activity-in-item-ce8c\",\r\n    i18nNs: \"homepage/components/page/trigger-list/groups/app/activity/content\",\r\n    nameKey: \"content.name\",\r\n    group: \"activityInItem.group\",\r\n    descriptionKey: \"content.description\",\r\n    type: \"trigger\",\r\n    LinkRender: createActionOrTriggerButtonRender(onAddSelect)\r\n}\r\ntriggerWhenActivityInUtils.onClickChange = onChangeSelect\r\n// async function onSelect({query, item}:{query:IActionOrTriggerListPageParams, item:IActionOrTriggerItem}){\r\n//     const res = getTriggerOrActionListPageParams(query)\r\n//     let info:PnAnResultData ;\r\n//     if(isRealInAndroid){\r\n//         info = await openPnAnInfoWindow()\r\n//     }else{\r\n//         info = {\r\n//             pn:`${createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)}.${createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)}.${createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)}`,\r\n//             an:createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)\r\n//         }\r\n//     }\r\n//     console.log('info=', info)\r\n//     const trigger = triggerWhenActivityInUtils.mergeDataToDefultData({javaData:{pn:info.pn, an:info.an, cn:info.cn}})\r\n//     projectEventUtils.dispatchEditEvent(projectEventUtils.EditType.add,{\r\n//         data:trigger,\r\n//         projectMemberType:ProjectMemberType.triggerGroup,\r\n//         projectInfo:res.data\r\n//     })\r\n//     window.history.back()\r\n// }\r\n\r\n\r\n\r\nasync function onSelect(){\r\n    let info:PnAnResultData ;\r\n    if(isRealInAndroid){\r\n        info = await openPnAnInfoWindow(true)\r\n    }else{\r\n        info = {\r\n            pn:`${createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)}.${createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)}.${createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)}`,\r\n            an:createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5),\r\n            cn:createRandomEnglishCharacters(Math.floor(Math.random() * 5) + 5)\r\n        }\r\n    }\r\n    // console.log('info1=', info)\r\n    return info\r\n}\r\nasync function onAddSelect({query}:{query:IActionOrTriggerListPageParams}){\r\n    const info = await onSelect()\r\n    const res = getTriggerOrActionListPageParams(query)\r\n    const action = triggerWhenActivityInUtils.mergeDataToDefultData({javaData:{pn:info.pn, an:info.an, cn:info.cn}})\r\n    projectEventUtils.dispatchEditEvent(projectEventUtils.EditType.add,{\r\n        data:action,\r\n        projectMemberType:ProjectMemberType.triggerGroup,\r\n        projectInfo:res.data\r\n    })\r\n    console.log('ccccccccccccccall open self')\r\n    autoWebViewJs.openSelfByPackage()\r\n    window.history.back()\r\n}\r\n\r\nasync function onChangeSelect({query}:{query:IActionOrTriggerListPageParams}){\r\n    const info = await onSelect()\r\n    const res = getTriggerOrActionListPageParams(query)\r\n    projectEventUtils.dispatchEditEvent(projectEventUtils.EditType.updateJavaData,{\r\n        data:info,\r\n        projectMemberType:ProjectMemberType.trigger,\r\n        projectInfo:res.data\r\n    })\r\n    autoWebViewJs.openSelfByPackage()\r\n}","import { IActionOrTriggerGroup } from \"../../../../trigger-list-action-list-common/ITriggerList-IActionList-common.intf\";\r\nimport { activityInItem } from \"./activity/activity-in\";\r\n\r\nexport const appGroup:IActionOrTriggerGroup = {\r\n    i18nNs: \"homepage/components/page/trigger-list/groups/app/content\",\r\n    nameKey: \"content.name\",\r\n    descriptionKey: \"content.description\",\r\n    items: [\r\n        activityInItem\r\n    ]\r\n}   ","import { IActionOrTriggerGroupList } from \"../../trigger-list-action-list-common/ITriggerList-IActionList-common.intf\";\r\nimport { timeGroup } from \"./groups/time/time-group\";\r\nimport { appGroup } from \"./groups/app/app-group\";\r\n\r\nexport const triggerListGroups:IActionOrTriggerGroupList = [\r\n    timeGroup,\r\n    appGroup\r\n]\r\n\r\nexport async function initTriggerListGroups(){\r\n    triggerListGroups\r\n}\r\n","import { IActionOrTriggerListPageParams } from '@app/static';\r\nimport { AppShell } from '@app/ui';\r\nimport { useTranslation } from '@fanfanlo';\r\nimport { triggerListGroups } from '@src/components/page/trigger-list/trigger.data';\r\nimport { TriggerListOrActionListUI } from '@src/components/trigger-list-action-list-common/TriggerListOrActionListUI';\r\nimport { useRouter } from 'next/router';\r\n// import { useTranslation } from 'react-i18next';\r\n\r\nexport default function TriggerList() {\r\n    const router = useRouter()\r\n    const { t } = useTranslation(\"homepage/pages/trigger-list/content\")\r\n    return (\r\n        <AppShell>\r\n            <TriggerListOrActionListUI groups={triggerListGroups} \r\n            titleConf={{title:t(\"content.title\")}}\r\n            \r\n            title={t(\"content.title\")} actionListParams={router.query as IActionOrTriggerListPageParams} />\r\n        </AppShell>\r\n    )\r\n}   ","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/trigger-list\",\n      function () {\n        return require(\"private-next-pages/trigger-list/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/trigger-list\"])\n      });\n    }\n  "],"names":["ActionOrTriggerListTypeEnum","getTriggerOrActionListPageParams","ProjectMemberType","triggerTimeoutUtils","projectEventUtils","throwTraceError","createActionOrTriggerButtonRender","timeoutTriggerItem","id","i18nNs","nameKey","group","descriptionKey","type","LinkRender","onSelect","query","item","res","addAction","trigger","createDefultData","data","triggerGroup","dispatchEditEvent","EditType","add","projectMemberType","projectInfo","window","history","back","updateAction","timeGroup","items","autoWebViewJs","isRealInAndroid","openPnAnInfoWindow","triggerWhenActivityInUtils","createRandomEnglishCharacters","activityInItem","onAddSelect","onClickChange","onChangeSelect","info","pn","Math","floor","random","an","cn","action","mergeDataToDefultData","javaData","console","log","openSelfByPackage","updateJavaData","appGroup","triggerListGroups","initTriggerListGroups","AppShell","useTranslation","TriggerListOrActionListUI","useRouter","TriggerList","router","t","groups","titleConf","title","actionListParams"],"sourceRoot":"","ignoreList":[]}